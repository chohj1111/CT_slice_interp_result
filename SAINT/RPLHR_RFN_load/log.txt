DataParallel(
  (module): MSR_RDN(
    (SFENet1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (SFENet2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (RDBs): ModuleList(
      (0): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (2): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (3): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (4): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (GFF): Sequential(
      (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (GW): GenWeights(
      (meta_block): Sequential(
        (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): ReLU(inplace=True)
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): ReLU(inplace=True)
        (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (RFN): FUSE_RDN(
      (SFENet1): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (SFENet2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (RDBs): ModuleList(
        (0): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (2): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (3): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (GFF): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (UPNet): Sequential(
        (0): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
)DataParallel(
  (module): MSR_RDN(
    (SFENet1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (SFENet2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (RDBs): ModuleList(
      (0): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (2): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (3): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (4): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (GFF): Sequential(
      (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (GW): GenWeights(
      (meta_block): Sequential(
        (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): ReLU(inplace=True)
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): ReLU(inplace=True)
        (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (RFN): FUSE_RDN(
      (SFENet1): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (SFENet2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (RDBs): ModuleList(
        (0): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (2): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (3): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (GFF): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (UPNet): Sequential(
        (0): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
)DataParallel(
  (module): MSR_RDN(
    (SFENet1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (SFENet2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (RDBs): ModuleList(
      (0): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (1): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (2): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (3): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (4): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
      (5): RDB(
        (convs): Sequential(
          (0): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (1): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(96, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (2): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (3): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(160, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (4): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(192, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (5): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(224, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (6): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(256, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
          (7): RDB_Conv(
            (conv): Sequential(
              (0): Conv2d(288, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU()
            )
          )
        )
        (LFF): Conv2d(320, 64, kernel_size=(1, 1), stride=(1, 1))
      )
    )
    (GFF): Sequential(
      (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
      (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (GW): GenWeights(
      (meta_block): Sequential(
        (0): Conv2d(1, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): ReLU(inplace=True)
        (2): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): ReLU(inplace=True)
        (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): ReLU(inplace=True)
        (8): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (RFN): FUSE_RDN(
      (SFENet1): Conv2d(2, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (SFENet2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (RDBs): ModuleList(
        (0): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (1): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (2): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
        (3): RDB(
          (convs): Sequential(
            (0): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(64, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (1): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(76, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (2): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(88, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (3): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(100, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (4): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(112, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
            (5): RDB_Conv(
              (conv): Sequential(
                (0): Conv2d(124, 12, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
              )
            )
          )
          (LFF): Conv2d(136, 64, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (GFF): Sequential(
        (0): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (UPNet): Sequential(
        (0): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
)

Evaluation:
Total time: 6698.97s

